---
title: Manual Backup and Restore of Redis for PCF
owner: London Services
---

##<id="manual-backups"> Manual Backups

It is possible to create a backup of an instance manually by following these steps:

* [Follow these steps](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh) to log into your Ops Manager installation and target the Redis tile deployment.
* Identify the VM which holds your instance by running `bosh vms`.
  * For the `shared-vm` plan this will be the job name containing `cf-redis-broker`.
  * For the `dedicated-vm` plan this will be the job name containing `dedicated-node`.
  * You can identify the exact node for your `dedicated-vm` service instance by comparing the IP Address from your application bindings. Run `cf env <your-app-name>` to view your application bindings. The `host` field under `credentials` will contain the IP address of the dedicated VM instance. Use `bosh vms` to identify the VM with that IP address. In the `bosh ssh` step select the VM with that name. 

An example output from `bosh vms`:

![OpsManager VMs view](bosh_vms.jpeg)

* Target your redis deployment with `bosh deployment`.
* `bosh ssh` into your desired node.

Persistence is enabled on these plans through the use of `RDB` files, using the following Redis config rules:
```
save 900 1
save 300 10
save 60 10000
```

### Shared-VM Plan

You can either take the latest RDB file held on disk, which is generated by the above the rules, or trigger a recent update by using the `redis-cli` to trigger a `BGSAVE`. Credentials to log into the `redis-cli` can be obtained from `VCAP_SERVICES` for your bound application.

The `redis-cli` is located in `/var/vcap/packages/redis/bin/redis-cli`.

On this plan, the `BGSAVE` command is aliased to a random string. This can be obtained from Ops Manager in the credentials tab.

#### Steps to Backup

* `bosh ssh` into your desired node. See the above section to identify the correct VM.
* Change to Root using `sudo -i`.
* Copy the contents of the `/var/vcap/store/cf-redis-broker` directory to a zip or tar file.
* Backup the file to your chosen location. You can use `bosh scp {job-name/index} --download /var/vcap/store/cf-redis-broker/redis-data/{instance id}/db/dump.rdb {location}` to copy the file from the service broker VM to another location. For example, `bosh scp cf-redis-broker/0 --download /var/vcap/store/cf-redis-broker/redis-data/{instance id}/db/dump.rdb /tmp` will copy the dump.rdb file to the `/tmp` directory on the local machine.

The `/var/vcap/store/cf-redis-broker` has sub-directories for each instance created of this plan. The backup file for each instance is called `dump.rdb`.

For example, here are two instances:
```
root@66358f3e-3428-46df-9bb3-9acc7770b188:/var/vcap/store/cf-redis-broker# find -type f | xargs ls -1
./redis-data/3124f373-e9e2-44e1-ad12-a8865d8978b0/db/dump.rdb
./redis-data/3124f373-e9e2-44e1-ad12-a8865d8978b0/redis.conf
./redis-data/3124f373-e9e2-44e1-ad12-a8865d8978b0/redis-server.pid
./redis-data/62333bf9-f023-4566-b233-6686f26b8f4d/db/dump.rdb
./redis-data/62333bf9-f023-4566-b233-6686f26b8f4d/redis.conf
./redis-data/62333bf9-f023-4566-b233-6686f26b8f4d/redis-server.pid
./statefile.json
```

### Dedicated-VM Plan

You can either take the latest RDB file on disk, as generated by the above rules, or trigger a more recent RDB file by executing the `BGSAVE` command using the `redis-cli`. Credentials can be obtained from the `VCAP_SERVICES` from your bound application.
The `redis-cli` can be found in `/var/vcap/packages/redis/bin/redis-cli`.

#### Steps to Backup

* `bosh ssh` into your desired node. See the above section to identify the correct VM.
* Change to Root using `sudo -i`.
* Copy `/var/vcap/store/redis/dump.rdb` directory to a zip or tar file.
* Backup the file to your chosen location. You can use `bosh scp {job-name/index} --download /var/vcap/store/redis/dump.rdb {location}` to copy the file from the dedicated VM instance to another location. For example, `bosh scp dedicated-node/0 --download /var/vcap/store/redis/dump.rdb /tmp` will copy the dump.rdb file to the `/tmp` directory on the local machine.

## <a id="restore"></a>Restore Redis Instance from a Backup

### To a Local System

You can choose to restore the RDB file to a local Redis instance.

The steps to do this depend on your configuration and setup.
Refer to the [Redis documentation](http://redis.io/documentation) for more details.

### To Pivotal Cloud Foundry

You can also restore your backup file to another instance of the `Redis for PCF` tile.

The below steps are manual.

Before restoring your RDB file you must have these prerequisites:

* Same resource configuration as the instance from which you backed up.
* The persistent disk should be increased to be `3.5 x size of the RDB file` if it is not already so. This allows
space for the temporary files used during the restore process

1. Create a new instance of the plan that you wish to restore to.
1. Identify the VM which the instance of your plan is located on by following the steps from the `Manual Backups` section above.
1. `bosh ssh` into the identified VM.
1. Switch to root user `sudo su`
1. Follow the steps for Dedicated-VM Plan or Shared-VM Plan below.

1. You must to have access to the service instance password. This can be retrieved using the following command:
  -  Password: `grep requirepass /var/vcap/store/redis/redis.conf`
1. Run `monit stop all`
1. Run `watch monit summary` to wait for monit services to enter the `not monitored` state.
1. Clean up existing Redis data files:
  - `rm -f /var/vcap/store/redis/appendonly.aof`
  - `rm -f /var/vcap/store/redis/dump.rdb`
1. Restore your Redis backup file to `/var/vcap/store/redis/dump.rdb` and correct the owner and permissions with `chown vcap:vcap /var/vcap/store/redis/dump.rdb && chmod 660 /var/vcap/store/redis/dump.rdb`
1. Edit the template Redis config file with `vim $(find /var/vcap/data/jobs/ -name redis.conf)` and make the following line changes:
  -  `appendonly yes` -> `appendonly no`
1. Run `monit start all`
1. Run `watch monit summary` to wait for monit services to enter the `running` state.
1. Run `/var/vcap/packages/redis/bin/redis-cli -a {instance_password} BGREWRITEAOF`
1. Run `watch "/var/vcap/packages/redis/bin/redis-cli -a {instance_password} INFO | grep aof_rewrite_in_progress"` until `aof_rewrite_in_progress` is `0`
1. Run `monit stop all`
1. Run `watch monit summary` to wait for monit services to enter the `not monitored` state.
1. Edit the template Redis config file with `vim $(find /var/vcap/data/jobs/ -name redis.conf)` and make the following line changes:
  -  `appendonly no` -> `appendonly yes`
1. Run `monit start all`

### Shared-VM Plan

1. Make sure you have a service provisioned that you can restore to. The instance ID is required in future steps. You can retrieve this by running `cf service {instance name} --guid`
1. You must have access to the service instance password and port. This can be retrieved using the following commands:
  -  Password: `grep requirepass /var/vcap/store/cf-redis-broker/redis-data/{instance_id}/redis.conf`
  -  Port: `grep port /var/vcap/store/cf-redis-broker/redis-data/{instance_id}/redis.conf`
1. Run `monit stop all`
1. Run `watch monit summary` to wait for monit services to enter the `not monitored` state.
1. Run `pkill redis-server`
1. Clean up existing Redis data files:
  - `rm -f /var/vcap/store/cf-redis-broker/redis-data/{instance_id}/db/appendonly.aof`
  - `rm -f /var/vcap/store/cf-redis-broker/redis-data/{instance_id}/db/dump.rdb`
1. Confirm no running instances of `redis-server` with `ps aux | grep redis-server`
1. Restore your Redis backup file to `/var/vcap/store/cf-redis-broker/redis-data/{instance_id}/db/dump.rdb` and correct the owner and permissions with `chown vcap:vcap /var/vcap/store/cf-redis-broker/redis-data/{instance_id}/db/dump.rdb && chmod 660 /var/vcap/store/cf-redis-broker/redis-data/{instance_id}/db/dump.rdb`
1. Edit the template Redis config file with `vim $(find /var/vcap/data/jobs/ -name redis.conf)` and make the following line changes:
  -  `appendonly yes` -> `appendonly no`
  - `rename-command BGREWRITEAOF ""` -> `rename-command BGREWRITEAOF "BGREWRITEAOFTEMP"`
1. Run `monit start all`
1. Run `watch monit summary` to wait for monit services to enter the `running` state.
1. Run `/var/vcap/packages/redis/bin/redis-cli -a {instance_password} -p {redis_port} BGREWRITEAOFTEMP`
1. Run `watch "/var/vcap/packages/redis/bin/redis-cli -a {instance_password} -p {instance_port} INFO | grep aof_rewrite_in_progress"` until `aof_rewrite_in_progress` is `0`
1. Run `monit stop all`
1. Run `watch monit summary` to wait for monit services to enter the `not monitored` state.
1. Run `pkill redis-server`
1. Confirm no running instances of `redis-server` with `ps aux | grep redis-server`
1. Edit the template Redis config file with `vim $(find /var/vcap/data/jobs/ -name redis.conf)` and make the following line changes:
  - `appendonly no` -> `appendonly yes`
  - `rename-command BGREWRITEAOF "BGREWRITEAOFTEMP"` -> `rename-command BGREWRITEAOF ""`
1. Run `monit start all`

## <a id="recovery"></a>Recovering Redis Instances

In the event of a recovery of Cloud Foundry, it is possible to recover bound
Redis instances to healthy states that are in sync with Cloud Foundry. There are
a few caveats to being able to recover previous instance state fully that
depend on your plan.

### Shared-VM Plan Caveats

* You need a backed up RDB Redis dump file - this would be stored in your S3
buckets if you have backups configured
* You need a backed up `/var/vcap/store/cf-redis-broker/redis-data` directory
from the service broker node (you do not need to backup and `*.aof` or
`*.rdb` files from subdirectories if you have backups configured)

### Dedicated-VM Plan Caveats

* You need a backed up RDB Redis dump file - this would be stored in your S3
buckets if you have backups configured
* You need a backed up `/var/vcap/store/redis/statefile.json` from the service
broker node

### Note

This procedure assumes that a recovery of service information and service keys
assigned to instances are restored with a restore of Cloud Foundry.

### Recovery Procedure

After redeploying Redis, take the following steps.

### Shared-VM Plan

1. `bosh ssh` into the service broker node of your Redis deployment
1. Run `monit stop all && pkill redis-server`
1. Wait for monit services to enter the `not monitored` state, you can watch
this with `watch monit summary`
1. Confirm no running instances of `redis-server` with
`ps aux | grep redis-server`
1. Copy the backed up `redis-data` directory into `/var/vcap/store/cf-redis-broker`
1. Follow the instructions [here](#restore) for your plan, skipping the first
four steps described here, for restoring your backed up Redis data
1. Your Redis instance is now recovered

### Dedicated-VM Plan

1. `bosh ssh` into the service broker node of your Redis deployment
1. Run `monit stop all`
1. Wait for monit services to enter the `not monitored` state, you can watch
this with `watch monit summary`
1. Copy the backed up `/var/vcap/store/cf-redis-broker/statefile.json` and
ensure ownership and permissions are correct with
`chown vcap:vcap /var/vcap/store/redis/dump.rdb && chmod 660 /var/vcap/store/redis/dump.rdb`
1. Follow the instructions [here](#restore) for your plan, skipping the first three steps
described here, for restoring your backed up Redis data
1. Your Redis instance is now recovered
